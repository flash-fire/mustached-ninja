addop
	or + -
args
	(
assignop
	:=
comp_stmt
	begin
comp_stmtLF1
	begin call if end id while
decs
	var
decsLR1
	var 
expr
	num - not id + (
exprLF1
	 <> < <= >= > =
expr_list
	num - not id + (
expr_listLR1
	 ,
factor
	( num not id
factorLF1
	 [
idList
	id
idListLR1
	 ,
mulop
	/ div mod and *
opt_stmts
	begin call if while id
param_list
	id
param_listLR1
	 ;
prgm
	program
prgmLF1
	begin var procedure
prgmLF1LF1
	begin procedure
proc_stmt
	call
proc_stmtLF1
	 (
relop
	<> < <= >= > =
sign
	+ -
simple_expr
	+ - num not id (
simple_exprLR1
	 or + -
std_type
	real integer
stmt
	begin call if while id
stmtLF1
	 else
stmt_list
	begin call if while id
stmt_listLR1
	 ;
subprgm_dec
	procedure
subprgm_decLF1
	begin var procedure
subprgm_decLF1LF1
	begin procedure
subprgm_decs
	procedure
subprgm_decsLR1
	 procedure
subprgm_head
	procedure
subprgm_headLF1
	( ;
term
	( num not id
termLR1
	 / div mod and *
type
	real integer array
variable
	id
variableLF1
	 [
