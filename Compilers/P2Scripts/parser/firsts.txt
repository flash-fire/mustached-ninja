addop
	or + -
args
	(
assignop
	:=
comp_stmt
	begin
comp_stmtLF1
	while id call begin if end
decs
	var
decsLR1
	 var
expr
	+ - ( id not num
exprLF1
	 <= < >= > = <>
expr_list
	+ - ( id not num
expr_listLR1
	 ,
factor
	( id not num
factorLF1
	 [
idList
	,
idListLR1
	 ,
mulop
	div / * mod and
opt_stmts
	id call begin if while
param_list
	id
param_listLR1
	 ;
prgm
	program
prgmLF1
	, )
prgmLF1LF1
	procedure var begin
prgmLF1LF1LF1
	procedure begin
prgmLF1LF2
	procedure var begin
prgmLF1LF2LF1
	procedure begin
proc_stmt
	call
proc_stmtLF1
	 (
relop
	<= < >= > = <>
sign
	+ -
simple_expr
	+ - ( id not num
simple_exprLR1
	 or + -
std_type
	integer real
stmt
	id call begin if while
stmtLF1
	 else
stmt_list
	id call begin if while
stmt_listLR1
	 ;
subprgm_dec
	procedure
subprgm_decLF1
	procedure var begin
subprgm_decLF1LF1
	procedure begin
subprgm_decs
	procedure
subprgm_decsLR1
	 procedure
subprgm_head
	procedure
subprgm_headLF1
	( ;
term
	( id not num
termLR1
	 / mod and div *
type
	array integer real
variable
	id
variableLF1
	 [
