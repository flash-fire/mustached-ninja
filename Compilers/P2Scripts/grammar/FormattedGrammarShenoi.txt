prgm
	program id ( idList ) ; decs subprgm_decs comp_stmt . 
idList
	id 
	idList , id 
decs
	EPSILON
	decs var id : type ; 
type
	std_type 
	array [ num .. num ] of std_type 
std_type
	integer 
	real 
subprgm_decs
	EPSILON
	subprgm_decs subprgm_dec ; 
subprgm_dec
	subprgm_head decs subprgm_decs comp_stmt 
subprgm_head
	procedure id args ; 
args
	EPSILON
	( param_list ) 
param_list
	id : type 
	param_list ; id : type 
comp_stmt
	begin opt_stmts end 
opt_stmts
	EPSILON
	stmt_list 
stmt_list
	stmt_list ; stmt 
	stmt 
stmt
	if expr then stmt else stmt 
	if expr then stmt 
	variable assignop expr 
	while expr do stmt 
	comp_stmt 
	proc_stmt 
variable
	id 
	id [ expr ] 
proc_stmt
	call id ( expr_list ) 
	call id 
expr_list
	expr_list , expr 
	expr 
expr
	simple_expr 
	simple_expr relop simple_expr 
term
	factor 
	term mulop factor 
simple_expr
	term 
	sign term 
	simple_expr addop term 
factor
	id 
	( expr ) 
	id [ expr ] 
	not factor 
	num 
sign
	- 
	+ 
addop
	or 
	- 
	+ 
assignop
	:= 
mulop
	* 
	/ 
	and 
	div 
	mod 
relop
	<> 
	>= 
	<= 
	= 
	> 
	< 
