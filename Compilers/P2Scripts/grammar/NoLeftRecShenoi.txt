prgm
	program id ( ) ; decs comp_stmt . 
	program id ( ) ; comp_stmt . 
	program id ( idList ) ; subprgm_decs comp_stmt . 
	program id ( idList ) ; decs subprgm_decs comp_stmt . 
	program id ( idList ) ; decs comp_stmt . 
	program id ( ) ; decs subprgm_decs comp_stmt . 
	program id ( idList ) ; comp_stmt . 
	program id ( ) ; subprgm_decs comp_stmt . 
idList
	, id idListLR1 
idListLR1
	, id idListLR1 
	EPSILON
decs
	var id : type ; decsLR1 
decsLR1
	EPSILON
	var id : type ; decsLR1 
type
	std_type 
	array [ num .. num ] of std_type 
std_type
	real 
	integer 
subprgm_decs
	subprgm_dec ; subprgm_decsLR1 
subprgm_decsLR1
	subprgm_dec ; subprgm_decsLR1 
	EPSILON
subprgm_dec
	subprgm_head comp_stmt 
	subprgm_head subprgm_decs comp_stmt 
	subprgm_head decs comp_stmt 
	subprgm_head decs subprgm_decs comp_stmt 
subprgm_head
	procedure id ; 
	procedure id args ; 
args
	( param_list ) 
param_list
	id : type param_listLR1 
param_listLR1
	EPSILON
	; id : type param_listLR1 
comp_stmt
	begin opt_stmts end 
	begin end 
opt_stmts
	stmt_list 
stmt_list
	stmt stmt_listLR1 
stmt_listLR1
	; stmt stmt_listLR1 
	EPSILON
stmt
	variable assignop expr 
	if expr then stmt else stmt 
	while expr do stmt 
	if expr then stmt 
	proc_stmt 
	comp_stmt 
variable
	id 
	id [ expr ] 
proc_stmt
	call id ( expr_list ) 
	call id 
expr_list
	expr expr_listLR1 
expr_listLR1
	, expr expr_listLR1 
	EPSILON
expr
	simple_expr relop simple_expr 
	simple_expr 
term
	factor termLR1 
termLR1
	mulop factor termLR1 
	EPSILON
simple_expr
	term simple_exprLR1 
	sign term simple_exprLR1 
simple_exprLR1
	addop term simple_exprLR1 
	EPSILON
factor
	num 
	( expr ) 
	id 
	not factor 
	id [ expr ] 
sign
	- 
	+ 
addop
	- 
	+ 
	or 
assignop
	:= 
mulop
	and 
	* 
	/ 
	div 
	mod 
relop
	> 
	<= 
	= 
	>= 
	<> 
	< 
