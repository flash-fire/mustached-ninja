addop
	+ or -
args
	(
assignop
	:=
comp_stmt
	begin
comp_stmtLF1
	while end call begin id if
decs
	var
decsLR1
	 var
expr
	+ - ( id num not
exprLF1
	=  < >= <> > <=
expr_list
	+ - ( id num not
expr_listLR1
	 ,
factor
	( id num not
factorLF1
	 [
idList
	id
idListLR1
	 ,
mulop
	and / div mod *
opt_stmts
	while begin id if call
param_list
	id
param_listLR1
	 ;
prgm
	program
prgmLF1
	begin procedure var
prgmLF1LF1
	begin procedure
proc_stmt
	call
proc_stmtLF1
	 (
relop
	= < >= <> > <=
sign
	+ -
simple_expr
	+ - ( id num not
simple_exprLR1
	 + or -
std_type
	integer real
stmt
	while begin id if call
stmtLF1
	 else
stmt_list
	while begin id if call
stmt_listLR1
	 ;
subprgm_dec
	procedure
subprgm_decLF1
	begin var procedure
subprgm_decLF1LF1
	begin procedure
subprgm_decs
	procedure
subprgm_decsLR1
	 procedure
subprgm_head
	procedure
subprgm_headLF1
	( ;
term
	( id num not
termLR1
	 and mod * / div
type
	integer array real
variable
	id
variableLF1
	 [
