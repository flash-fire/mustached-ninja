addop
	+ or -
args
	(
assignop
	:=
comp_stmt
	begin
comp_stmtLF1
	begin id if while call end
decs
	var
decsLR1
	 var
expr
	- id + ( not num
exprLF1
	 = > < <> <= >=
expr_list
	- id + ( not num
expr_listLR1
	 ,
factor
	( not num id
factorLF1
	 [
idList
	id
idListLR1
	 ,
mulop
	div and / * mod
opt_stmts
	begin while call id if
param_list
	id
param_listLR1
	 ;
prgm
	program
prgmLF1
	var begin procedure
prgmLF1LF1
	begin procedure
proc_stmt
	call
proc_stmtLF1
	 (
relop
	= > < <> <= >=
sign
	+ -
simple_expr
	id - + ( not num
simple_exprLR1
	+ or  -
std_type
	real integer
stmt
	begin while call id if
stmtLF1
	 else
stmt_list
	begin while call id if
stmt_listLR1
	 ;
subprgm_dec
	procedure
subprgm_decLF1
	var begin procedure
subprgm_decLF1LF1
	begin procedure
subprgm_decs
	procedure
subprgm_decsLR1
	 procedure
subprgm_head
	procedure
subprgm_headLF1
	( ;
term
	( not num id
termLR1
	div /  mod and *
type
	real array integer
variable
	id
variableLF1
	 [
