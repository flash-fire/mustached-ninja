addop
	or - +
args
	(
assignop
	:=
comp_stmt
	begin
comp_stmtLF1
	id while call if begin end
decs
	var
decsLR1
	 var
expr
	id - + not num (
exprLF1
	 = <> > <= >= <
expr_list
	id - + not num (
expr_listLR1
	 ,
factor
	id not num (
factorLF1
	 [
idList
	id
idListLR1
	 ,
mulop
	div mod and * /
opt_stmts
	if id while begin call
param_list
	id
param_listLR1
	 ;
prgm
	program
prgmLF1
	procedure begin var
prgmLF1LF1
	procedure begin
proc_stmt
	call
proc_stmtLF1
	 (
relop
	= <> > <= >= <
sign
	- +
simple_expr
	id - + not num (
simple_exprLR1
	 or - +
std_type
	integer real
stmt
	if id while begin call
stmtLF1
	 else
stmt_list
	if id while begin call
stmt_listLR1
	 ;
subprgm_dec
	procedure
subprgm_decLF1
	begin procedure var
subprgm_decLF1LF1
	begin procedure
subprgm_decs
	procedure
subprgm_decsLR1
	 procedure
subprgm_head
	procedure
subprgm_headLF1
	; (
term
	id not num (
termLR1
	 * / div mod and
type
	integer real array
variable
	id
variableLF1
	 [
