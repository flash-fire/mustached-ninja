prgm
	program id ( idList ) ; prgmLF1 
prgmLF1
	decs prgmLF1LF1 
	subprgm_decs comp_stmt . 
	comp_stmt . 
prgmLF1LF1
	subprgm_decs comp_stmt . 
	comp_stmt . 
idList
	id idListLR1 
idListLR1
	, id idListLR1 
	EPSILON
decs
	var id : type ; decsLR1 
decsLR1
	EPSILON
	var id : type ; decsLR1 
type
	array [ num .. num ] of std_type 
	std_type 
std_type
	integer 
	real 
subprgm_decs
	subprgm_dec ; subprgm_decsLR1 
subprgm_decsLR1
	subprgm_dec ; subprgm_decsLR1 
	EPSILON
subprgm_dec
	subprgm_head subprgm_decLF1 
subprgm_decLF1
	decs subprgm_decLF1LF1 
	subprgm_decs comp_stmt 
	comp_stmt 
subprgm_decLF1LF1
	subprgm_decs comp_stmt 
	comp_stmt 
subprgm_head
	procedure id subprgm_headLF1 
subprgm_headLF1
	; 
	args ; 
args
	( param_list ) 
param_list
	id : type param_listLR1 
param_listLR1
	EPSILON
	; id : type param_listLR1 
comp_stmt
	begin comp_stmtLF1 
comp_stmtLF1
	opt_stmts end 
	end 
opt_stmts
	stmt_list 
stmt_list
	stmt stmt_listLR1 
stmt_listLR1
	EPSILON
	; stmt stmt_listLR1 
stmt
	comp_stmt 
	proc_stmt 
	if expr then stmt stmtLF1 
	while expr do stmt 
	variable assignop expr 
stmtLF1
	EPSILON
	else stmt 
variable
	id variableLF1 
variableLF1
	[ expr ] 
	EPSILON
proc_stmt
	call id proc_stmtLF1 
proc_stmtLF1
	( expr_list ) 
	EPSILON
expr_list
	expr expr_listLR1 
expr_listLR1
	EPSILON
	, expr expr_listLR1 
expr
	simple_expr exprLF1 
exprLF1
	EPSILON
	relop simple_expr 
term
	factor termLR1 
termLR1
	mulop factor termLR1 
	EPSILON
simple_expr
	term simple_exprLR1 
	sign term simple_exprLR1 
simple_exprLR1
	addop term simple_exprLR1 
	EPSILON
factor
	( expr ) 
	num 
	id factorLF1 
	not factor 
factorLF1
	[ expr ] 
	EPSILON
sign
	+ 
	- 
addop
	+ 
	or 
	- 
assignop
	:= 
mulop
	div 
	and 
	mod 
	/ 
	* 
relop
	>= 
	<> 
	= 
	> 
	< 
	<= 
